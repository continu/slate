{
  "schemes": [],
  "swagger": "2.0",
  "info": {
    "description": "You can use our API to get access to learner completion information contained within Continu.",
    "title": "Continu's Open API",
    "contact": {
      "name": "API Support",
      "url": "https://continu.co/help",
      "email": "support@continu.co"
    },
    "license": {},
    "version": "1.0"
  },
  "host": "https://usw2-oapi.continu.co",
  "basePath": "/api/v1",
  "paths": {
    "/completion/assessments": {
      "get": {
        "description": "This endpoints lists all Assessments for specific users. Users should be specified as a comma separated list of email addresses for which the Assessment information is required.\nYou also have the option to specify a date range using the from or until Unix Epoch timestamp.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Assessments"
        ],
        "summary": "Lists User Assessments Completion Information for all the user emails in the mandatory for_users argument",
        "parameters": [
          {
            "type": "string",
            "description": "Comma Separated List of users for which to return the AssessmentsList",
            "name": "for_users",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "description": "From date in Unix time (AKA Epoch time, seconds since 00:00:00 UTC on 1 January 1970)",
            "name": "from",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Until date in Unix time (AKA Epoch time, seconds since 00:00:00 UTC on 1 January 1970)",
            "name": "until",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The Authorization Header and Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/controllers.UserAssessments"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "number"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "number"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/completion/assignments": {
      "get": {
        "description": "This endpoints lists all Assignments for specific users. Users should be specified as a comma separated list of email addresses for which the Assignment information is required.\nYou also have the option to specify a date range using the from or until Unix Epoch timestamp.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Assignments"
        ],
        "summary": "Lists User Assignments Completion Information for all the user emails in the mandatory for_users argument",
        "parameters": [
          {
            "type": "string",
            "description": "Comma Separated List of users for which to return the AssignmentsList",
            "name": "for_users",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "description": "From date in Unix time (AKA Epoch time, seconds since 00:00:00 UTC on 1 January 1970)",
            "name": "from",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Until date in Unix time (AKA Epoch time, seconds since 00:00:00 UTC on 1 January 1970)",
            "name": "until",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The Authorization Header and Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/controllers.UserAssignments"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "number"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "number"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/completion/tracks": {
      "get": {
        "description": "This endpoints lists all Learning Tracks for specific users. Users should be specified as a comma separated list of email addresses for which the Learning Track information is required.\nYou also have the option to specify a date range using the from or until Unix Epoch timestamp.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Tracks"
        ],
        "summary": "Lists User Tracks Completion Information for all the user emails in the mandatory for_users argument",
        "parameters": [
          {
            "type": "string",
            "description": "Comma Separated List of users for which to return the TracksList",
            "name": "for_users",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "description": "From date in Unix time (AKA Epoch time, seconds since 00:00:00 UTC on 1 January 1970)",
            "name": "from",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Until date in Unix time (AKA Epoch time, seconds since 00:00:00 UTC on 1 January 1970)",
            "name": "until",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The Authorization Header and Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/controllers.UserTracks"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "number"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "number"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/completion/workshops": {
      "get": {
        "description": "This endpoints lists all Workshops for specific users. Users should be specified as a comma separated list of email addresses for which the Workshop information is required.\nYou also have the option to specify a date range using the from or until Unix Epoch timestamp.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Workshops"
        ],
        "summary": "Lists User Workshops Completion Information for all the user emails in the mandatory for_users argument",
        "parameters": [
          {
            "type": "string",
            "description": "Comma Separated List of users for which to return the WorkshopsList",
            "name": "for_users",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "description": "From date in Unix time (AKA Epoch time, seconds since 00:00:00 UTC on 1 January 1970)",
            "name": "from",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Until date in Unix time (AKA Epoch time, seconds since 00:00:00 UTC on 1 January 1970)",
            "name": "until",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The Authorization Header and Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/controllers.UserWorkshops"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "number"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "number"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/status/ping": {
      "get": {
        "description": "GET method that returns a pong/alive message to check API's responsiveness",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Status"
        ],
        "summary": "Ping methods returns a simple pong/alive signal",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "controllers.Assessment": {
      "type": "object",
      "properties": {
        "attempts": {
          "type": "integer"
        },
        "completion_status": {
          "type": "string"
        },
        "grading_status": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "passed_date": {
          "type": "string"
        },
        "score": {
          "type": "integer"
        },
        "start_date": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "controllers.AssignmentRecord": {
      "type": "object",
      "properties": {
        "assigned_content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/controllers.ContentRecord"
          }
        },
        "assigned_date": {
          "type": "string"
        },
        "assignment_id": {
          "type": "string"
        },
        "completed": {
          "type": "boolean"
        },
        "completed_date": {
          "type": "string"
        },
        "completion_status": {
          "type": "string"
        },
        "due_date": {
          "type": "string"
        }
      }
    },
    "controllers.ContentRecord": {
      "type": "object",
      "properties": {
        "completed_date": {
          "type": "string"
        },
        "content_id": {
          "type": "string"
        },
        "content_title": {
          "type": "string"
        },
        "content_type": {
          "type": "string"
        }
      }
    },
    "controllers.Track": {
      "type": "object",
      "properties": {
        "completed": {
          "type": "boolean"
        },
        "completed_date": {
          "type": "string"
        },
        "duration": {
          "type": "integer"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "progress": {
          "type": "integer"
        },
        "start_date": {
          "type": "string"
        }
      }
    },
    "controllers.UserAssessments": {
      "type": "object",
      "properties": {
        "assessments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/controllers.Assessment"
          }
        },
        "email": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "user_id": {
          "type": "string"
        }
      }
    },
    "controllers.UserAssignments": {
      "type": "object",
      "properties": {
        "assignments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/controllers.AssignmentRecord"
          }
        },
        "email": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "user_id": {
          "type": "string"
        }
      }
    },
    "controllers.UserTracks": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "tracks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/controllers.Track"
          }
        },
        "user_id": {
          "type": "string"
        }
      }
    },
    "controllers.UserWorkshops": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "user_id": {
          "type": "string"
        },
        "workshops": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/controllers.Workshop"
          }
        }
      }
    },
    "controllers.Workshop": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string"
        },
        "facilitator": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    }
  },
  "tags": [
    {
      "description": "Continu uses the OAuth 2.0 protocol’s Client Credentials Flow for authentication and authorization. \n\nWith these credentials, the client requests a bearer access token. This token is retrieved by POST'ing the following information:\n\n|Parameter|Description|\n|---|---|\n| client_id  | The ID of the client supplied by us  |\n| client_secret  | The secret of the client supplied by us  |\n\nhttps://usw2-api.continu.co/v3/oauth2/access-token\n\nThe calling application extracts the access token from the response (see the example) and then sends the token using an HTTP authorization header with the value in the format Bearer \u003caccess token\u003e. Access tokens are valid only for the set of operations and resources described in the scope of the token request.\n\n`curl -X POST  -H \"Content-Type: application/json\" -d '{\"client_id\": \"\u003cid\u003e\", \"client_secret\": \"\u003csecret\u003e\"}' https://usw2-api.continu.co/v3/oauth2/access-token`\n\nWhich will return:\n\n`{\"access_token\":\"\u003ctoken\u003e\",\"token_type\":\"bearer\",\"expires_in\":\u003cepoch\u003e}`",
      "name": "Authentication"
    },
    {
      "description": "We currently limit the number of calls a single client can make to 5000 requests per day. If you exceed the limit, we return a 429 Too Many Requests response. \n\n",
      "name": "Rate Limits"
    }
  ]
}
