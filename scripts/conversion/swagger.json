{
  "schemes": [],
  "swagger": "2.0",
  "info": {
    "description": "Welcome to the Continu API. You can use our API to get access to learner completion information contained within Continu.",
    "title": "Continu's Open API",
    "contact": {
      "name": "API Support",
      "url": "https://continu.co/help",
      "email": "support@continu.co"
    },
    "license": {},
    "version": "1.0"
  },
  "host": "oapi-latest.continu.co",
  "basePath": "/api/v1",
  "paths": {
    "/completion/assessments": {
      "get": {
        "description": "This endpoint lists all Assessments for specific users. Users should be specified as a comma separated list of email addresses for which the Assessment information is required.\nYou also have the option to specify a date range using the from or until Unix Epoch timestamp.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Assessments"
        ],
        "summary": "Get Assessments completion",
        "parameters": [
          {
            "type": "string",
            "description": "Comma Separated List of users for which to return the AssessmentsList",
            "name": "for_users",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "description": "From date in Unix time (AKA Epoch time, seconds since 00:00:00 UTC on 1 January 1970)",
            "name": "from",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Until date in Unix time (AKA Epoch time, seconds since 00:00:00 UTC on 1 January 1970)",
            "name": "until",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The Authorization Header and Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/controllers.UserAssessments"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "number"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "number"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/completion/assignments": {
      "get": {
        "description": "This endpoint lists all Assignments for specific users. Users should be specified as a comma separated list of email addresses for which the Assignment information is required.\nYou also have the option to specify a date range using the from or until Unix Epoch timestamp.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Assignments"
        ],
        "summary": "Get Assignments completion",
        "parameters": [
          {
            "type": "string",
            "description": "Comma Separated List of users for which to return the AssignmentsList",
            "name": "for_users",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "description": "From date in Unix time (AKA Epoch time, seconds since 00:00:00 UTC on 1 January 1970)",
            "name": "from",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Until date in Unix time (AKA Epoch time, seconds since 00:00:00 UTC on 1 January 1970)",
            "name": "until",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The Authorization Header and Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/controllers.UserAssignments"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "number"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "number"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/completion/tracks": {
      "get": {
        "description": "This endpoint lists all Learning Tracks for specific users. Users should be specified as a comma separated list of email addresses for which the Learning Track information is required.\nYou also have the option to specify a date range using the from or until Unix Epoch timestamp.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Tracks"
        ],
        "summary": "Lists Learning Tracks Completion Information for all the user emails in the mandatory for_users argument",
        "parameters": [
          {
            "type": "string",
            "description": "Comma Separated List of users for which to return the TracksList",
            "name": "for_users",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "description": "From date in Unix time (AKA Epoch time, seconds since 00:00:00 UTC on 1 January 1970)",
            "name": "from",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Until date in Unix time (AKA Epoch time, seconds since 00:00:00 UTC on 1 January 1970)",
            "name": "until",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The Authorization Header and Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/controllers.UserTracks"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "number"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "number"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    },
    "/completion/workshops": {
      "get": {
        "description": "This endpoint lists all Workshops for specific users. Users should be specified as a comma separated list of email addresses for which the Workshop information is required.\nYou also have the option to specify a date range using the from or until Unix Epoch timestamp.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Workshops"
        ],
        "summary": "Get Workshops completion",
        "parameters": [
          {
            "type": "string",
            "description": "Comma Separated List of users for which to return the WorkshopsList",
            "name": "for_users",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "description": "From date in Unix time (AKA Epoch time, seconds since 00:00:00 UTC on 1 January 1970)",
            "name": "from",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Until date in Unix time (AKA Epoch time, seconds since 00:00:00 UTC on 1 January 1970)",
            "name": "until",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The Authorization Header and Token",
            "name": "Authorization",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/controllers.UserWorkshops"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "number"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "number"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "controllers.Assessment": {
      "type": "object",
      "properties": {
        "attempts": {
          "type": "integer",
          "example": 1
        },
        "completion_status": {
          "type": "string",
          "example": "Passed"
        },
        "grading_status": {
          "type": "string",
          "example": "Completed"
        },
        "id": {
          "type": "string",
          "example": "5b72efb05e8e1534c818ec81"
        },
        "passed_date": {
          "type": "string",
          "example": "2018-09-11T17:23:06.667-06:00"
        },
        "score": {
          "type": "integer",
          "example": 100
        },
        "start_date": {
          "type": "string",
          "example": "2018-09-06T17:07:20.942-06:00"
        },
        "title": {
          "type": "string",
          "example": "Designing for the Modern Workplace"
        },
        "type": {
          "type": "string",
          "example": "Video Coaching"
        }
      }
    },
    "controllers.Assignment": {
      "type": "object",
      "properties": {
        "assigned_content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/controllers.Content"
          }
        },
        "assigned_date": {
          "type": "string",
          "example": "2019-09-01T14:24:16.393-06:00"
        },
        "assignment_id": {
          "type": "string",
          "example": "57bdd6624487471000e2bf3a"
        },
        "completed": {
          "type": "boolean",
          "example": true
        },
        "completed_date": {
          "type": "string",
          "example": "2019-09-04T14:24:16.393-06:00"
        },
        "completion_status": {
          "type": "string",
          "example": "Completed - On Time"
        },
        "due_date": {
          "type": "string",
          "example": "2019-09-05T14:24:16.393-06:00"
        }
      }
    },
    "controllers.Content": {
      "type": "object",
      "properties": {
        "completed_date": {
          "type": "string",
          "example": "2019-09-04T14:24:16.393-06:00"
        },
        "content_id": {
          "type": "string",
          "example": "54e6411129b6698c270000d6"
        },
        "content_title": {
          "type": "string",
          "example": "Sales Enablement Track"
        },
        "content_type": {
          "type": "string",
          "example": "Track"
        }
      }
    },
    "controllers.Track": {
      "type": "object",
      "properties": {
        "completed": {
          "type": "boolean",
          "example": true
        },
        "completed_date": {
          "type": "string",
          "example": "2019-07-19T15:32:53.744-06:00"
        },
        "duration": {
          "type": "integer",
          "example": 5
        },
        "id": {
          "type": "string",
          "example": "5d6fea50ca2bc5000fdf7dd6"
        },
        "name": {
          "type": "string",
          "example": "Sales Tools for Teams"
        },
        "progress": {
          "type": "integer",
          "example": 100
        },
        "start_date": {
          "type": "string",
          "example": "2019-07-19T15:16:54.744-06:00"
        }
      }
    },
    "controllers.UserAssessments": {
      "type": "object",
      "properties": {
        "assessments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/controllers.Assessment"
          }
        },
        "email": {
          "type": "string",
          "example": "theresa@continu.co"
        },
        "first_name": {
          "type": "string",
          "example": "Theresa"
        },
        "last_name": {
          "type": "string",
          "example": "Jenkins"
        },
        "user_id": {
          "type": "string",
          "example": "56b1258a9f176c1100e7e993"
        }
      }
    },
    "controllers.UserAssignments": {
      "type": "object",
      "properties": {
        "assignments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/controllers.Assignment"
          }
        },
        "email": {
          "type": "string",
          "example": "stanleybond@continu.co"
        },
        "first_name": {
          "type": "string",
          "example": "Stanly"
        },
        "last_name": {
          "type": "string",
          "example": "Bond"
        },
        "user_id": {
          "type": "string",
          "example": "551b3553932def2b1e000019"
        }
      }
    },
    "controllers.UserTracks": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "ferdinand@continu.co"
        },
        "first_name": {
          "type": "string",
          "example": "Ferdinand"
        },
        "last_name": {
          "type": "string",
          "example": "Danton"
        },
        "tracks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/controllers.Track"
          }
        },
        "user_id": {
          "type": "string",
          "example": "5aa15c20f070380bcd59214c"
        }
      }
    },
    "controllers.UserWorkshops": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "mark@continu.co"
        },
        "first_name": {
          "type": "string",
          "example": "Mark"
        },
        "last_name": {
          "type": "string",
          "example": "Schumacher"
        },
        "user_id": {
          "type": "string",
          "example": "5aa15c20f070380bcd59214c"
        },
        "workshops": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/controllers.Workshop"
          }
        }
      }
    },
    "controllers.Workshop": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "example": "2020-04-28T09:13:30.466-06:00"
        },
        "facilitator": {
          "type": "string",
          "example": "Ferdinand Danton"
        },
        "id": {
          "type": "string",
          "example": "5aa15c20f070380bcd59214c"
        },
        "status": {
          "type": "string",
          "example": "attended"
        },
        "title": {
          "type": "string",
          "example": "Full Zoom Workshop"
        }
      }
    }
  }
}
